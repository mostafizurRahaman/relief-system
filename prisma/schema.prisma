generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  role UserRole 
  phoneNumber String @db.VarChar() @unique
  password String @db.VarChar()
  needsPasswordChange Boolean @default(true)
  status UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admin Admin?
  @@map("users")
}


model Admin { 
  id String @id @default(uuid())
  fullName String @db.VarChar()
  phoneNumber String @db.VarChar() @unique
  profileImg String? @db.VarChar()
  email String? @db.VarChar()
  address String @db.VarChar()
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  user  User @relation(fields: [phoneNumber], references: [phoneNumber])
  house House[]
  updatedAt DateTime @updatedAt
  @@map("admins")
}

model House { 
  id String @id @default(uuid())
  wordNo Int 
  name String @db.VarChar()
  addBy String @db.VarChar()
  admin Admin @relation(fields: [addBy] , references: [phoneNumber])
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}


model Relief {
  id String @id @default(uuid())
  reliefName String @db.VarChar()
  providerName String @db.VarChar()
  startDate DateTime 
  endDate DateTime
  quantity_of_relief Int
  number_of_recipients Int @default(0)
  status ReliefStatus @default(RUNNING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//  Enums ** 
enum UserRole  {
   ADMIN
   BENIFICIARY
   SUPER_ADMIN
}


enum UserStatus { 
  ACTIVE
  BLOCKED
  DELETED
}

enum ReliefStatus { 
  RUNNING
  CLOSED
}